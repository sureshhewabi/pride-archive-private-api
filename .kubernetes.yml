apiVersion: apps/v1
kind: Deployment
metadata:
  name: $app_name
  labels:
    app: $app_name
spec:
  replicas: $k8s_replicas
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: $app_name
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 25%
  template:
    metadata:
      labels:
        app: $app_name
    spec:
      securityContext:
        runAsUser: $NFS_UID
        runAsGroup: $NFS_GID
        fsGroup: $NFS_GID2
      imagePullSecrets:
        - name: $DOCKER_PULL_SECRET
      volumes:
        - name: logvolume
          nfs:
            server: $LOGS_NFS_SERVER
            path: $LOGS_NFS_PATH
        - name: datavolume
          nfs:
            server: $DATA_NFS_SERVER
            path: $DATA_NFS_PATH
        - name: application-config
          configMap:
            name: $SPRING_CONFIG_MAP
            items:
              - key: application.yml
                path: application.yml
      containers:
        - name: $app_name
          image: $IMAGE
          imagePullPolicy: Always
          ports:
            - containerPort: $port
          env:
            - name: JAVA_OPTS
              value: "${JVM_OPTS}"
            - name: APM_AGENT_OPTS
              value: "-javaagent:${APM_AGENT_JAR} -Delastic.apm.service_name=${app_name} -Delastic.apm.application_packages=${APM_PACKAGE} -Delastic.apm.server_urls=${APM_SERVER}"
          volumeMounts:
            - name: application-config
              mountPath: "/app/config/"
              readOnly: true
            - name: logvolume
              mountPath: $logs_vol_path
            - name: datavolume
              mountPath: $data_vol_path
              readOnly: true
          livenessProbe:
            httpGet:
              path: $contextPath/actuator/health
              port: $port
            initialDelaySeconds: 60
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: $contextPath/actuator/health
              port: $port
            initialDelaySeconds: 60
            periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: $app_name-service
spec:
  selector:
    app: $app_name
  ports:
    - protocol: TCP
      port: $port
      targetPort: $port
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: $app_name-filebeat
  labels:
    app: $app_name-filebeat
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: $app_name-filebeat
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 25%
  template:
    metadata:
      labels:
        app: $app_name-filebeat
    spec:
      volumes:
        - name: logvolume
          nfs:
            server: $LOGS_NFS_SERVER
            path: $LOGS_NFS_PATH
        - name: filebeat-config
          configMap:
            name: $FILEBEAT_CONFIG_MAP
            items:
              - key: filebeat.yml
                path: filebeat.yml
      containers:
        - name: $app_name-filebeat
          image: docker.elastic.co/beats/filebeat:7.8.0
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: logvolume
              mountPath: $logs_vol_path
            - name: filebeat-config
              mountPath: /usr/share/filebeat/filebeat.yml
              subPath: filebeat.yml